# FastAPI + RQ 서버 Docker Compose 설정

services:
  # FastAPI 애플리케이션 (메인 서비스)
  fastapi:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-default_password}
      - SUPABASE_URL=${SUPABASE_URL:-http://localhost:54321}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:-your-service-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-your-anthropic-key}
    depends_on:
      - redis
    volumes:
      - .:/app
      - /app/.venv  # 가상환경 제외
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (RQ 작업 큐용)
  redis:
    image: public.ecr.aws/docker/library/redis:7-alpine
    ports:
      - "6379:6379"  # 표준 Redis 포트 사용
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-default_password}
    command: redis-server --requirepass ${REDIS_PASSWORD:-default_password} --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-default_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RQ Worker
  rq-worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-default_password}
      - SUPABASE_URL=${SUPABASE_URL:-http://localhost:54321}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:-your-service-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-your-anthropic-key}
      - PYTHONUNBUFFERED=1
      - WORKER_MODE=fork
      - RQ_WORKER_TIMEOUT=600
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv  # 가상환경 제외
    command: python start_worker.py --mode basic --scaling false
    restart: unless-stopped

  # RQ Dashboard (RQ 작업 모니터링) - 임시 비활성화 (네트워크 문제)
  # rq-dashboard:
  #   image: eoranged/rq-dashboard:latest
  #   ports:
  #     - "9181:9181"
  #   environment:
  #     - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
  #   depends_on:
  #     - redis

volumes:
  redis_data: 