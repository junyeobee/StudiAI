# CI 환경용 Docker Compose - 내부 Redis 사용

services:
  # Redis (CI 전용)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  # FastAPI 애플리케이션 (내부 Redis 사용)
  fastapi:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=test
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - SUPABASE_URL=${SUPABASE_URL:-http://localhost:54321}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:-your-service-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-test_key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-test_key}
    volumes:
      - .:/app
      - /app/.venv  # 가상환경 제외
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RQ Worker (내부 Redis 사용)
  rq-worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=test
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - SUPABASE_URL=${SUPABASE_URL:-http://localhost:54321}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY:-your-service-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-test_key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-test_key}
      - PYTHONUNBUFFERED=1
      - WORKER_MODE=fork
      - RQ_WORKER_TIMEOUT=600
    volumes:
      - .:/app
      - /app/.venv  # 가상환경 제외
    command: python start_worker.py --mode basic --scaling false
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped 